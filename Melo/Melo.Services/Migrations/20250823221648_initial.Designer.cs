// <auto-generated />
using System;
using Melo.Services;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Melo.Services.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250823221648_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Melo.Services.Entities.Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateOnly?>("DateOfRelease")
                        .HasColumnType("date");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long?>("LikeCount")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Playtime")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("PlaytimeInSeconds")
                        .HasColumnType("int");

                    b.Property<int?>("SongCount")
                        .HasColumnType("int");

                    b.Property<long?>("ViewCount")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Album", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(2989),
                            CreatedBy = "system",
                            DateOfRelease = new DateOnly(2012, 6, 12),
                            ImageUrl = "/api/image/stream/album/1",
                            LikeCount = 2L,
                            Name = "Iceman",
                            Playtime = "0:24",
                            PlaytimeInSeconds = 24,
                            SongCount = 2,
                            ViewCount = 61L
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3167),
                            CreatedBy = "system",
                            ImageUrl = "/api/image/stream/album/2",
                            LikeCount = 0L,
                            Name = "1989",
                            Playtime = "0:58",
                            PlaytimeInSeconds = 58,
                            SongCount = 4,
                            ViewCount = 16L
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3170),
                            CreatedBy = "system",
                            DateOfRelease = new DateOnly(1999, 11, 11),
                            ImageUrl = "/api/image/stream/album/3",
                            LikeCount = 1L,
                            Name = "Starboy",
                            Playtime = "0:53",
                            PlaytimeInSeconds = 53,
                            SongCount = 3,
                            ViewCount = 75L
                        });
                });

            modelBuilder.Entity("Melo.Services.Entities.AlbumArtist", b =>
                {
                    b.Property<int>("AlbumId")
                        .HasColumnType("int");

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("AlbumId", "ArtistId");

                    b.HasIndex("ArtistId");

                    b.ToTable("AlbumArtist", (string)null);

                    b.HasData(
                        new
                        {
                            AlbumId = 1,
                            ArtistId = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3241),
                            CreatedBy = "system"
                        },
                        new
                        {
                            AlbumId = 2,
                            ArtistId = 4,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3243),
                            CreatedBy = "system"
                        },
                        new
                        {
                            AlbumId = 3,
                            ArtistId = 9,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3244),
                            CreatedBy = "system"
                        });
                });

            modelBuilder.Entity("Melo.Services.Entities.AlbumGenre", b =>
                {
                    b.Property<int>("AlbumId")
                        .HasColumnType("int");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("AlbumId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("AlbumGenre", (string)null);

                    b.HasData(
                        new
                        {
                            AlbumId = 1,
                            GenreId = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3211),
                            CreatedBy = "system"
                        },
                        new
                        {
                            AlbumId = 1,
                            GenreId = 4,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3213),
                            CreatedBy = "system"
                        },
                        new
                        {
                            AlbumId = 2,
                            GenreId = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3215),
                            CreatedBy = "system"
                        },
                        new
                        {
                            AlbumId = 3,
                            GenreId = 5,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3216),
                            CreatedBy = "system"
                        });
                });

            modelBuilder.Entity("Melo.Services.Entities.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long?>("LikeCount")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long?>("ViewCount")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Artist", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(2779),
                            CreatedBy = "system",
                            ImageUrl = "/api/image/stream/artist/1",
                            LikeCount = 1L,
                            Name = "Drake",
                            ViewCount = 61L
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(2784),
                            CreatedBy = "system",
                            ImageUrl = "/api/image/stream/artist/2",
                            LikeCount = 0L,
                            Name = "Kanye West",
                            ViewCount = 0L
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(2849),
                            CreatedBy = "system",
                            ImageUrl = "/api/image/stream/artist/3",
                            LikeCount = 0L,
                            Name = "Metallica",
                            ViewCount = 0L
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(2852),
                            CreatedBy = "system",
                            ImageUrl = "/api/image/stream/artist/4",
                            LikeCount = 0L,
                            Name = "Taylor Swift",
                            ViewCount = 16L
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(2855),
                            CreatedBy = "system",
                            LikeCount = 0L,
                            Name = "Chris Brown",
                            ViewCount = 0L
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(2857),
                            CreatedBy = "system",
                            ImageUrl = "/api/image/stream/artist/6",
                            LikeCount = 0L,
                            Name = "Queen",
                            ViewCount = 0L
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(2859),
                            CreatedBy = "system",
                            LikeCount = 0L,
                            Name = "Pink Floyd",
                            ViewCount = 0L
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(2861),
                            CreatedBy = "system",
                            LikeCount = 0L,
                            Name = "Lady Gaga",
                            ViewCount = 0L
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(2863),
                            CreatedBy = "system",
                            LikeCount = 1L,
                            Name = "The Weeknd",
                            ViewCount = 75L
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(2866),
                            CreatedBy = "system",
                            LikeCount = 2L,
                            Name = "Adele",
                            ViewCount = 23L
                        });
                });

            modelBuilder.Entity("Melo.Services.Entities.ArtistGenre", b =>
                {
                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ArtistId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("ArtistGenre", (string)null);

                    b.HasData(
                        new
                        {
                            ArtistId = 1,
                            GenreId = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(2899),
                            CreatedBy = "system"
                        },
                        new
                        {
                            ArtistId = 1,
                            GenreId = 4,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(2902),
                            CreatedBy = "system"
                        },
                        new
                        {
                            ArtistId = 2,
                            GenreId = 4,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(2903),
                            CreatedBy = "system"
                        },
                        new
                        {
                            ArtistId = 3,
                            GenreId = 3,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(2904),
                            CreatedBy = "system"
                        },
                        new
                        {
                            ArtistId = 4,
                            GenreId = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(2905),
                            CreatedBy = "system"
                        },
                        new
                        {
                            ArtistId = 6,
                            GenreId = 2,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(2906),
                            CreatedBy = "system"
                        },
                        new
                        {
                            ArtistId = 7,
                            GenreId = 2,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(2907),
                            CreatedBy = "system"
                        },
                        new
                        {
                            ArtistId = 8,
                            GenreId = 2,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(2908),
                            CreatedBy = "system"
                        },
                        new
                        {
                            ArtistId = 9,
                            GenreId = 5,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(2909),
                            CreatedBy = "system"
                        },
                        new
                        {
                            ArtistId = 10,
                            GenreId = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(2910),
                            CreatedBy = "system"
                        });
                });

            modelBuilder.Entity("Melo.Services.Entities.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long?>("ViewCount")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Genre", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(2720),
                            CreatedBy = "system",
                            ImageUrl = "/api/image/stream/genre/1",
                            Name = "Pop",
                            ViewCount = 45L
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(2728),
                            CreatedBy = "system",
                            Name = "Rock",
                            ViewCount = 0L
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(2731),
                            CreatedBy = "system",
                            ImageUrl = "/api/image/stream/genre/3",
                            Name = "Metal",
                            ViewCount = 0L
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(2732),
                            CreatedBy = "system",
                            ImageUrl = "/api/image/stream/genre/4",
                            Name = "Rap",
                            ViewCount = 32L
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(2734),
                            CreatedBy = "system",
                            Name = "RnB",
                            ViewCount = 75L
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(2736),
                            CreatedBy = "system",
                            ImageUrl = "/api/image/stream/genre/6",
                            Name = "Blues",
                            ViewCount = 23L
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(2738),
                            CreatedBy = "system",
                            Name = "Classical",
                            ViewCount = 0L
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(2740),
                            CreatedBy = "system",
                            Name = "Techno",
                            ViewCount = 0L
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(2742),
                            CreatedBy = "system",
                            Name = "Dancehall",
                            ViewCount = 0L
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(2744),
                            CreatedBy = "system",
                            Name = "Jazz",
                            ViewCount = 0L
                        });
                });

            modelBuilder.Entity("Melo.Services.Entities.Playlist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Playtime")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("PlaytimeInSeconds")
                        .HasColumnType("int");

                    b.Property<int?>("SongCount")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Playlist", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3550),
                            Name = "Playlist1",
                            Playtime = "0:24",
                            PlaytimeInSeconds = 24,
                            SongCount = 2,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Melo.Services.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Role", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(2228),
                            CreatedBy = "system",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(2236),
                            CreatedBy = "system",
                            Name = "User"
                        });
                });

            modelBuilder.Entity("Melo.Services.Entities.Song", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AudioUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateOnly?>("DateOfRelease")
                        .HasColumnType("date");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long?>("LikeCount")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Playtime")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("PlaytimeInSeconds")
                        .HasColumnType("int");

                    b.Property<long?>("ViewCount")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Song", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AudioUrl = "/api/audio/stream/1",
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3277),
                            CreatedBy = "system",
                            DateOfRelease = new DateOnly(2012, 6, 12),
                            ImageUrl = "/api/image/stream/album/1",
                            LikeCount = 1L,
                            Name = "Imagine",
                            Playtime = "0:09",
                            PlaytimeInSeconds = 9,
                            ViewCount = 29L
                        },
                        new
                        {
                            Id = 2,
                            AudioUrl = "/api/audio/stream/2",
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3289),
                            CreatedBy = "system",
                            DateOfRelease = new DateOnly(2012, 6, 12),
                            ImageUrl = "/api/image/stream/album/1",
                            LikeCount = 1L,
                            Name = "Fast car",
                            Playtime = "0:15",
                            PlaytimeInSeconds = 15,
                            ViewCount = 32L
                        },
                        new
                        {
                            Id = 3,
                            AudioUrl = "/api/audio/stream/3",
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3296),
                            CreatedBy = "system",
                            ImageUrl = "/api/image/stream/album/2",
                            LikeCount = 1L,
                            Name = "Bohemian",
                            Playtime = "0:09",
                            PlaytimeInSeconds = 9,
                            ViewCount = 6L
                        },
                        new
                        {
                            Id = 4,
                            AudioUrl = "/api/audio/stream/4",
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3352),
                            CreatedBy = "system",
                            ImageUrl = "/api/image/stream/album/2",
                            LikeCount = 0L,
                            Name = "Rhapsody",
                            Playtime = "0:15",
                            PlaytimeInSeconds = 15,
                            ViewCount = 3L
                        },
                        new
                        {
                            Id = 5,
                            AudioUrl = "/api/audio/stream/5",
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3355),
                            CreatedBy = "system",
                            ImageUrl = "/api/image/stream/album/2",
                            LikeCount = 1L,
                            Name = "Hills",
                            Playtime = "0:19",
                            PlaytimeInSeconds = 19,
                            ViewCount = 4L
                        },
                        new
                        {
                            Id = 6,
                            AudioUrl = "/api/audio/stream/6",
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3358),
                            CreatedBy = "system",
                            ImageUrl = "/api/image/stream/album/2",
                            LikeCount = 0L,
                            Name = "Lulaby",
                            Playtime = "0:15",
                            PlaytimeInSeconds = 15,
                            ViewCount = 3L
                        },
                        new
                        {
                            Id = 7,
                            AudioUrl = "/api/audio/stream/7",
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3361),
                            CreatedBy = "system",
                            DateOfRelease = new DateOnly(1999, 11, 11),
                            ImageUrl = "/api/image/stream/album/3",
                            LikeCount = 0L,
                            Name = "Chicago Freestyle",
                            Playtime = "0:19",
                            PlaytimeInSeconds = 19,
                            ViewCount = 17L
                        },
                        new
                        {
                            Id = 8,
                            AudioUrl = "/api/audio/stream/8",
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3369),
                            CreatedBy = "system",
                            DateOfRelease = new DateOnly(1999, 11, 11),
                            ImageUrl = "/api/image/stream/album/3",
                            LikeCount = 0L,
                            Name = "Headlines",
                            Playtime = "0:15",
                            PlaytimeInSeconds = 15,
                            ViewCount = 22L
                        },
                        new
                        {
                            Id = 9,
                            AudioUrl = "/api/audio/stream/9",
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3375),
                            CreatedBy = "system",
                            DateOfRelease = new DateOnly(1999, 11, 11),
                            ImageUrl = "/api/image/stream/album/3",
                            LikeCount = 1L,
                            Name = "California Love",
                            Playtime = "0:19",
                            PlaytimeInSeconds = 19,
                            ViewCount = 36L
                        },
                        new
                        {
                            Id = 10,
                            AudioUrl = "/api/audio/stream/10",
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3381),
                            CreatedBy = "system",
                            LikeCount = 2L,
                            Name = "On God",
                            Playtime = "0:09",
                            PlaytimeInSeconds = 9,
                            ViewCount = 23L
                        });
                });

            modelBuilder.Entity("Melo.Services.Entities.SongAlbum", b =>
                {
                    b.Property<int>("SongId")
                        .HasColumnType("int");

                    b.Property<int>("AlbumId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("SongOrder")
                        .HasColumnType("int");

                    b.HasKey("SongId", "AlbumId");

                    b.HasIndex("AlbumId");

                    b.ToTable("SongAlbum", (string)null);

                    b.HasData(
                        new
                        {
                            SongId = 1,
                            AlbumId = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3422),
                            CreatedBy = "system",
                            SongOrder = 1
                        },
                        new
                        {
                            SongId = 2,
                            AlbumId = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3423),
                            CreatedBy = "system",
                            SongOrder = 2
                        },
                        new
                        {
                            SongId = 3,
                            AlbumId = 2,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3425),
                            CreatedBy = "system",
                            SongOrder = 1
                        },
                        new
                        {
                            SongId = 4,
                            AlbumId = 2,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3426),
                            CreatedBy = "system",
                            SongOrder = 2
                        },
                        new
                        {
                            SongId = 5,
                            AlbumId = 2,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3427),
                            CreatedBy = "system",
                            SongOrder = 3
                        },
                        new
                        {
                            SongId = 6,
                            AlbumId = 2,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3429),
                            CreatedBy = "system",
                            SongOrder = 4
                        },
                        new
                        {
                            SongId = 7,
                            AlbumId = 3,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3430),
                            CreatedBy = "system",
                            SongOrder = 1
                        },
                        new
                        {
                            SongId = 8,
                            AlbumId = 3,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3431),
                            CreatedBy = "system",
                            SongOrder = 2
                        },
                        new
                        {
                            SongId = 9,
                            AlbumId = 3,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3433),
                            CreatedBy = "system",
                            SongOrder = 3
                        });
                });

            modelBuilder.Entity("Melo.Services.Entities.SongArtist", b =>
                {
                    b.Property<int>("SongId")
                        .HasColumnType("int");

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("SongId", "ArtistId");

                    b.HasIndex("ArtistId");

                    b.ToTable("SongArtist", (string)null);

                    b.HasData(
                        new
                        {
                            SongId = 1,
                            ArtistId = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3461),
                            CreatedBy = "system"
                        },
                        new
                        {
                            SongId = 2,
                            ArtistId = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3463),
                            CreatedBy = "system"
                        },
                        new
                        {
                            SongId = 3,
                            ArtistId = 4,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3464),
                            CreatedBy = "system"
                        },
                        new
                        {
                            SongId = 4,
                            ArtistId = 4,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3465),
                            CreatedBy = "system"
                        },
                        new
                        {
                            SongId = 5,
                            ArtistId = 4,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3466),
                            CreatedBy = "system"
                        },
                        new
                        {
                            SongId = 6,
                            ArtistId = 4,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3467),
                            CreatedBy = "system"
                        },
                        new
                        {
                            SongId = 7,
                            ArtistId = 9,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3468),
                            CreatedBy = "system"
                        },
                        new
                        {
                            SongId = 8,
                            ArtistId = 9,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3469),
                            CreatedBy = "system"
                        },
                        new
                        {
                            SongId = 9,
                            ArtistId = 9,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3470),
                            CreatedBy = "system"
                        },
                        new
                        {
                            SongId = 10,
                            ArtistId = 10,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3472),
                            CreatedBy = "system"
                        });
                });

            modelBuilder.Entity("Melo.Services.Entities.SongGenre", b =>
                {
                    b.Property<int>("SongId")
                        .HasColumnType("int");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("SongId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("SongGenre", (string)null);

                    b.HasData(
                        new
                        {
                            SongId = 1,
                            GenreId = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3506),
                            CreatedBy = "system"
                        },
                        new
                        {
                            SongId = 2,
                            GenreId = 4,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3508),
                            CreatedBy = "system"
                        },
                        new
                        {
                            SongId = 3,
                            GenreId = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3509),
                            CreatedBy = "system"
                        },
                        new
                        {
                            SongId = 4,
                            GenreId = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3510),
                            CreatedBy = "system"
                        },
                        new
                        {
                            SongId = 5,
                            GenreId = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3511),
                            CreatedBy = "system"
                        },
                        new
                        {
                            SongId = 6,
                            GenreId = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3512),
                            CreatedBy = "system"
                        },
                        new
                        {
                            SongId = 7,
                            GenreId = 5,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3514),
                            CreatedBy = "system"
                        },
                        new
                        {
                            SongId = 8,
                            GenreId = 5,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3515),
                            CreatedBy = "system"
                        },
                        new
                        {
                            SongId = 9,
                            GenreId = 5,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3516),
                            CreatedBy = "system"
                        },
                        new
                        {
                            SongId = 10,
                            GenreId = 6,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3517),
                            CreatedBy = "system"
                        });
                });

            modelBuilder.Entity("Melo.Services.Entities.SongPlaylist", b =>
                {
                    b.Property<int>("SongId")
                        .HasColumnType("int");

                    b.Property<int>("PlaylistId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SongOrder")
                        .HasColumnType("int");

                    b.HasKey("SongId", "PlaylistId");

                    b.HasIndex("PlaylistId");

                    b.ToTable("SongPlaylist", (string)null);

                    b.HasData(
                        new
                        {
                            SongId = 1,
                            PlaylistId = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3574),
                            SongOrder = 1
                        },
                        new
                        {
                            SongId = 2,
                            PlaylistId = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3575),
                            SongOrder = 2
                        });
                });

            modelBuilder.Entity("Melo.Services.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LastName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("RefreshToken")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("RefreshTokenExpiresAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("StripeCustomerId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("StripeSubscriptionId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("Subscribed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SubscriptionEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SubscriptionStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(2546),
                            CreatedBy = "system",
                            Deleted = false,
                            Email = "admin@melo.com",
                            Password = "$2a$11$JIaeQiq2/1fsOh23LiUb8erdiPkwVpZ8MDtoAk18SkBJs9CPIxrd6",
                            UserName = "admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(2553),
                            CreatedBy = "system",
                            Deleted = false,
                            Email = "user1@melo.com",
                            FirstName = "User1",
                            LastName = "User1",
                            Password = "$2a$11$JIaeQiq2/1fsOh23LiUb8erdiPkwVpZ8MDtoAk18SkBJs9CPIxrd6",
                            UserName = "user1"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(2557),
                            CreatedBy = "system",
                            Deleted = false,
                            Email = "user2@melo.com",
                            Password = "$2a$11$JIaeQiq2/1fsOh23LiUb8erdiPkwVpZ8MDtoAk18SkBJs9CPIxrd6",
                            UserName = "user2"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(2560),
                            CreatedBy = "system",
                            Deleted = false,
                            Email = "user3@melo.com",
                            FirstName = "User3",
                            LastName = "User3",
                            Password = "$2a$11$JIaeQiq2/1fsOh23LiUb8erdiPkwVpZ8MDtoAk18SkBJs9CPIxrd6",
                            UserName = "user3"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(2563),
                            CreatedBy = "system",
                            Deleted = false,
                            Email = "user4@melo.com",
                            Password = "$2a$11$JIaeQiq2/1fsOh23LiUb8erdiPkwVpZ8MDtoAk18SkBJs9CPIxrd6",
                            UserName = "user4"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(2566),
                            CreatedBy = "system",
                            Deleted = false,
                            Email = "user5@melo.com",
                            FirstName = "User5",
                            LastName = "User5",
                            Password = "$2a$11$JIaeQiq2/1fsOh23LiUb8erdiPkwVpZ8MDtoAk18SkBJs9CPIxrd6",
                            UserName = "user5"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(2614),
                            CreatedBy = "system",
                            Deleted = false,
                            Email = "user6@melo.com",
                            Password = "$2a$11$JIaeQiq2/1fsOh23LiUb8erdiPkwVpZ8MDtoAk18SkBJs9CPIxrd6",
                            UserName = "user6"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(2617),
                            CreatedBy = "system",
                            Deleted = false,
                            Email = "user7@melo.com",
                            FirstName = "User7",
                            LastName = "User7",
                            Password = "$2a$11$JIaeQiq2/1fsOh23LiUb8erdiPkwVpZ8MDtoAk18SkBJs9CPIxrd6",
                            UserName = "user7"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(2620),
                            CreatedBy = "system",
                            Deleted = false,
                            Email = "user8@melo.com",
                            Password = "$2a$11$JIaeQiq2/1fsOh23LiUb8erdiPkwVpZ8MDtoAk18SkBJs9CPIxrd6",
                            UserName = "user8"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(2623),
                            CreatedBy = "system",
                            Deleted = false,
                            Email = "user9@melo.com",
                            FirstName = "User9",
                            LastName = "User9",
                            Password = "$2a$11$JIaeQiq2/1fsOh23LiUb8erdiPkwVpZ8MDtoAk18SkBJs9CPIxrd6",
                            UserName = "user9"
                        });
                });

            modelBuilder.Entity("Melo.Services.Entities.UserAlbumLike", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("AlbumId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId", "AlbumId");

                    b.HasIndex("AlbumId");

                    b.ToTable("UserAlbumLike", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 3,
                            AlbumId = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3988)
                        },
                        new
                        {
                            UserId = 3,
                            AlbumId = 3,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3990)
                        },
                        new
                        {
                            UserId = 5,
                            AlbumId = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3991)
                        });
                });

            modelBuilder.Entity("Melo.Services.Entities.UserAlbumView", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("AlbumId")
                        .HasColumnType("int");

                    b.Property<int?>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId", "AlbumId")
                        .HasName("PK_UserAlbumActivity");

                    b.HasIndex("AlbumId");

                    b.ToTable("UserAlbumView", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 2,
                            AlbumId = 1,
                            Count = 24,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3740)
                        },
                        new
                        {
                            UserId = 3,
                            AlbumId = 1,
                            Count = 2,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3742)
                        },
                        new
                        {
                            UserId = 4,
                            AlbumId = 1,
                            Count = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3743)
                        },
                        new
                        {
                            UserId = 5,
                            AlbumId = 1,
                            Count = 30,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3744)
                        },
                        new
                        {
                            UserId = 7,
                            AlbumId = 1,
                            Count = 2,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3745)
                        },
                        new
                        {
                            UserId = 9,
                            AlbumId = 1,
                            Count = 2,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3746)
                        },
                        new
                        {
                            UserId = 2,
                            AlbumId = 2,
                            Count = 7,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3748)
                        },
                        new
                        {
                            UserId = 3,
                            AlbumId = 2,
                            Count = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3749)
                        },
                        new
                        {
                            UserId = 4,
                            AlbumId = 2,
                            Count = 3,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3750)
                        },
                        new
                        {
                            UserId = 5,
                            AlbumId = 2,
                            Count = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3751)
                        },
                        new
                        {
                            UserId = 7,
                            AlbumId = 2,
                            Count = 4,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3752)
                        },
                        new
                        {
                            UserId = 2,
                            AlbumId = 3,
                            Count = 22,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3753)
                        },
                        new
                        {
                            UserId = 3,
                            AlbumId = 3,
                            Count = 36,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3754)
                        },
                        new
                        {
                            UserId = 4,
                            AlbumId = 3,
                            Count = 8,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3756)
                        },
                        new
                        {
                            UserId = 5,
                            AlbumId = 3,
                            Count = 3,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3757)
                        },
                        new
                        {
                            UserId = 7,
                            AlbumId = 3,
                            Count = 3,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3758)
                        },
                        new
                        {
                            UserId = 9,
                            AlbumId = 3,
                            Count = 3,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3759)
                        });
                });

            modelBuilder.Entity("Melo.Services.Entities.UserArtistLike", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId", "ArtistId");

                    b.HasIndex("ArtistId");

                    b.ToTable("UserArtistLike", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 3,
                            ArtistId = 9,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(4017)
                        },
                        new
                        {
                            UserId = 5,
                            ArtistId = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(4018)
                        },
                        new
                        {
                            UserId = 5,
                            ArtistId = 10,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(4020)
                        },
                        new
                        {
                            UserId = 10,
                            ArtistId = 10,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(4020)
                        });
                });

            modelBuilder.Entity("Melo.Services.Entities.UserArtistView", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<int?>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId", "ArtistId")
                        .HasName("PK_UserArtistActivity");

                    b.HasIndex("ArtistId");

                    b.ToTable("UserArtistView", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 2,
                            ArtistId = 1,
                            Count = 24,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3899)
                        },
                        new
                        {
                            UserId = 3,
                            ArtistId = 1,
                            Count = 2,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3900)
                        },
                        new
                        {
                            UserId = 4,
                            ArtistId = 1,
                            Count = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3902)
                        },
                        new
                        {
                            UserId = 5,
                            ArtistId = 1,
                            Count = 30,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3903)
                        },
                        new
                        {
                            UserId = 7,
                            ArtistId = 1,
                            Count = 2,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3904)
                        },
                        new
                        {
                            UserId = 9,
                            ArtistId = 1,
                            Count = 2,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3905)
                        },
                        new
                        {
                            UserId = 2,
                            ArtistId = 4,
                            Count = 7,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3906)
                        },
                        new
                        {
                            UserId = 3,
                            ArtistId = 4,
                            Count = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3907)
                        },
                        new
                        {
                            UserId = 4,
                            ArtistId = 4,
                            Count = 3,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3908)
                        },
                        new
                        {
                            UserId = 5,
                            ArtistId = 4,
                            Count = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3909)
                        },
                        new
                        {
                            UserId = 7,
                            ArtistId = 4,
                            Count = 4,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3910)
                        },
                        new
                        {
                            UserId = 2,
                            ArtistId = 9,
                            Count = 22,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3912)
                        },
                        new
                        {
                            UserId = 3,
                            ArtistId = 9,
                            Count = 36,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3913)
                        },
                        new
                        {
                            UserId = 4,
                            ArtistId = 9,
                            Count = 8,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3914)
                        },
                        new
                        {
                            UserId = 5,
                            ArtistId = 9,
                            Count = 3,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3915)
                        },
                        new
                        {
                            UserId = 7,
                            ArtistId = 9,
                            Count = 3,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3916)
                        },
                        new
                        {
                            UserId = 9,
                            ArtistId = 9,
                            Count = 3,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3917)
                        },
                        new
                        {
                            UserId = 3,
                            ArtistId = 10,
                            Count = 7,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3918)
                        },
                        new
                        {
                            UserId = 5,
                            ArtistId = 10,
                            Count = 10,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3919)
                        },
                        new
                        {
                            UserId = 7,
                            ArtistId = 10,
                            Count = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3921)
                        },
                        new
                        {
                            UserId = 10,
                            ArtistId = 10,
                            Count = 5,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3922)
                        });
                });

            modelBuilder.Entity("Melo.Services.Entities.UserGenreView", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<int?>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId", "GenreId")
                        .HasName("PK_UserGenreActivity");

                    b.HasIndex("GenreId");

                    b.ToTable("UserGenreView", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 2,
                            GenreId = 1,
                            Count = 18,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3797)
                        },
                        new
                        {
                            UserId = 3,
                            GenreId = 1,
                            Count = 2,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3798)
                        },
                        new
                        {
                            UserId = 4,
                            GenreId = 1,
                            Count = 3,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3799)
                        },
                        new
                        {
                            UserId = 5,
                            GenreId = 1,
                            Count = 16,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3801)
                        },
                        new
                        {
                            UserId = 7,
                            GenreId = 1,
                            Count = 5,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3802)
                        },
                        new
                        {
                            UserId = 9,
                            GenreId = 1,
                            Count = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3803)
                        },
                        new
                        {
                            UserId = 2,
                            GenreId = 4,
                            Count = 13,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3842)
                        },
                        new
                        {
                            UserId = 3,
                            GenreId = 4,
                            Count = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3844)
                        },
                        new
                        {
                            UserId = 4,
                            GenreId = 4,
                            Count = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3845)
                        },
                        new
                        {
                            UserId = 5,
                            GenreId = 4,
                            Count = 15,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3846)
                        },
                        new
                        {
                            UserId = 7,
                            GenreId = 4,
                            Count = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3847)
                        },
                        new
                        {
                            UserId = 9,
                            GenreId = 4,
                            Count = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3849)
                        },
                        new
                        {
                            UserId = 2,
                            GenreId = 5,
                            Count = 22,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3850)
                        },
                        new
                        {
                            UserId = 3,
                            GenreId = 5,
                            Count = 36,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3851)
                        },
                        new
                        {
                            UserId = 4,
                            GenreId = 5,
                            Count = 8,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3852)
                        },
                        new
                        {
                            UserId = 5,
                            GenreId = 5,
                            Count = 3,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3854)
                        },
                        new
                        {
                            UserId = 7,
                            GenreId = 5,
                            Count = 3,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3855)
                        },
                        new
                        {
                            UserId = 9,
                            GenreId = 5,
                            Count = 3,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3856)
                        },
                        new
                        {
                            UserId = 3,
                            GenreId = 6,
                            Count = 7,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3857)
                        },
                        new
                        {
                            UserId = 5,
                            GenreId = 6,
                            Count = 10,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3858)
                        },
                        new
                        {
                            UserId = 7,
                            GenreId = 6,
                            Count = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3859)
                        },
                        new
                        {
                            UserId = 10,
                            GenreId = 6,
                            Count = 5,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3860)
                        });
                });

            modelBuilder.Entity("Melo.Services.Entities.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRole", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(2665),
                            CreatedBy = "system"
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 2,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(2667),
                            CreatedBy = "system"
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 2,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(2668),
                            CreatedBy = "system"
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 2,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(2669),
                            CreatedBy = "system"
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 2,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(2671),
                            CreatedBy = "system"
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 2,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(2672),
                            CreatedBy = "system"
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 2,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(2673),
                            CreatedBy = "system"
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 2,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(2674),
                            CreatedBy = "system"
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 2,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(2675),
                            CreatedBy = "system"
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 2,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(2677),
                            CreatedBy = "system"
                        });
                });

            modelBuilder.Entity("Melo.Services.Entities.UserSongLike", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("SongId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId", "SongId");

                    b.HasIndex("SongId");

                    b.ToTable("UserSongLike", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 2,
                            SongId = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3955)
                        },
                        new
                        {
                            UserId = 2,
                            SongId = 2,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3956)
                        },
                        new
                        {
                            UserId = 2,
                            SongId = 9,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3957)
                        },
                        new
                        {
                            UserId = 2,
                            SongId = 3,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3958)
                        },
                        new
                        {
                            UserId = 3,
                            SongId = 10,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3958)
                        },
                        new
                        {
                            UserId = 5,
                            SongId = 5,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3959)
                        },
                        new
                        {
                            UserId = 10,
                            SongId = 10,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3960)
                        });
                });

            modelBuilder.Entity("Melo.Services.Entities.UserSongView", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("SongId")
                        .HasColumnType("int");

                    b.Property<int?>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId", "SongId")
                        .HasName("PK_UserSongActivity");

                    b.HasIndex("SongId");

                    b.ToTable("UserSongView", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 2,
                            SongId = 1,
                            Count = 11,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3638)
                        },
                        new
                        {
                            UserId = 2,
                            SongId = 2,
                            Count = 13,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3639)
                        },
                        new
                        {
                            UserId = 2,
                            SongId = 3,
                            Count = 5,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3641)
                        },
                        new
                        {
                            UserId = 2,
                            SongId = 4,
                            Count = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3642)
                        },
                        new
                        {
                            UserId = 2,
                            SongId = 5,
                            Count = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3643)
                        },
                        new
                        {
                            UserId = 2,
                            SongId = 7,
                            Count = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3644)
                        },
                        new
                        {
                            UserId = 2,
                            SongId = 8,
                            Count = 4,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3645)
                        },
                        new
                        {
                            UserId = 2,
                            SongId = 9,
                            Count = 17,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3646)
                        },
                        new
                        {
                            UserId = 3,
                            SongId = 1,
                            Count = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3647)
                        },
                        new
                        {
                            UserId = 3,
                            SongId = 2,
                            Count = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3649)
                        },
                        new
                        {
                            UserId = 3,
                            SongId = 6,
                            Count = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3650)
                        },
                        new
                        {
                            UserId = 3,
                            SongId = 7,
                            Count = 12,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3652)
                        },
                        new
                        {
                            UserId = 3,
                            SongId = 8,
                            Count = 12,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3654)
                        },
                        new
                        {
                            UserId = 3,
                            SongId = 9,
                            Count = 12,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3655)
                        },
                        new
                        {
                            UserId = 3,
                            SongId = 10,
                            Count = 7,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3656)
                        },
                        new
                        {
                            UserId = 4,
                            SongId = 2,
                            Count = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3657)
                        },
                        new
                        {
                            UserId = 4,
                            SongId = 4,
                            Count = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3658)
                        },
                        new
                        {
                            UserId = 4,
                            SongId = 5,
                            Count = 2,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3659)
                        },
                        new
                        {
                            UserId = 4,
                            SongId = 7,
                            Count = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3660)
                        },
                        new
                        {
                            UserId = 4,
                            SongId = 8,
                            Count = 3,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3661)
                        },
                        new
                        {
                            UserId = 4,
                            SongId = 9,
                            Count = 4,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3662)
                        },
                        new
                        {
                            UserId = 5,
                            SongId = 1,
                            Count = 15,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3664)
                        },
                        new
                        {
                            UserId = 5,
                            SongId = 2,
                            Count = 15,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3665)
                        },
                        new
                        {
                            UserId = 5,
                            SongId = 6,
                            Count = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3666)
                        },
                        new
                        {
                            UserId = 5,
                            SongId = 7,
                            Count = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3667)
                        },
                        new
                        {
                            UserId = 5,
                            SongId = 8,
                            Count = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3668)
                        },
                        new
                        {
                            UserId = 5,
                            SongId = 9,
                            Count = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3669)
                        },
                        new
                        {
                            UserId = 5,
                            SongId = 10,
                            Count = 10,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3670)
                        },
                        new
                        {
                            UserId = 7,
                            SongId = 1,
                            Count = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3671)
                        },
                        new
                        {
                            UserId = 7,
                            SongId = 2,
                            Count = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3672)
                        },
                        new
                        {
                            UserId = 7,
                            SongId = 3,
                            Count = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3673)
                        },
                        new
                        {
                            UserId = 7,
                            SongId = 4,
                            Count = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3675)
                        },
                        new
                        {
                            UserId = 7,
                            SongId = 5,
                            Count = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3676)
                        },
                        new
                        {
                            UserId = 7,
                            SongId = 6,
                            Count = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3677)
                        },
                        new
                        {
                            UserId = 7,
                            SongId = 7,
                            Count = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3678)
                        },
                        new
                        {
                            UserId = 7,
                            SongId = 8,
                            Count = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3679)
                        },
                        new
                        {
                            UserId = 7,
                            SongId = 9,
                            Count = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3680)
                        },
                        new
                        {
                            UserId = 7,
                            SongId = 10,
                            Count = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3681)
                        },
                        new
                        {
                            UserId = 9,
                            SongId = 1,
                            Count = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3682)
                        },
                        new
                        {
                            UserId = 9,
                            SongId = 2,
                            Count = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3683)
                        },
                        new
                        {
                            UserId = 9,
                            SongId = 7,
                            Count = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3684)
                        },
                        new
                        {
                            UserId = 9,
                            SongId = 8,
                            Count = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3685)
                        },
                        new
                        {
                            UserId = 9,
                            SongId = 9,
                            Count = 1,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3687)
                        },
                        new
                        {
                            UserId = 10,
                            SongId = 10,
                            Count = 5,
                            CreatedAt = new DateTime(2025, 8, 23, 22, 16, 48, 196, DateTimeKind.Utc).AddTicks(3688)
                        });
                });

            modelBuilder.Entity("Melo.Services.Entities.AlbumArtist", b =>
                {
                    b.HasOne("Melo.Services.Entities.Album", "Album")
                        .WithMany("AlbumArtists")
                        .HasForeignKey("AlbumId")
                        .IsRequired()
                        .HasConstraintName("FK_AlbumArtist_Album");

                    b.HasOne("Melo.Services.Entities.Artist", "Artist")
                        .WithMany("AlbumArtists")
                        .HasForeignKey("ArtistId")
                        .IsRequired()
                        .HasConstraintName("FK_AlbumArtist_Artist");

                    b.Navigation("Album");

                    b.Navigation("Artist");
                });

            modelBuilder.Entity("Melo.Services.Entities.AlbumGenre", b =>
                {
                    b.HasOne("Melo.Services.Entities.Album", "Album")
                        .WithMany("AlbumGenres")
                        .HasForeignKey("AlbumId")
                        .IsRequired()
                        .HasConstraintName("FK_AlbumGenre_Album");

                    b.HasOne("Melo.Services.Entities.Genre", "Genre")
                        .WithMany("AlbumGenres")
                        .HasForeignKey("GenreId")
                        .IsRequired()
                        .HasConstraintName("FK_AlbumGenre_Genre");

                    b.Navigation("Album");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("Melo.Services.Entities.ArtistGenre", b =>
                {
                    b.HasOne("Melo.Services.Entities.Artist", "Artist")
                        .WithMany("ArtistGenres")
                        .HasForeignKey("ArtistId")
                        .IsRequired()
                        .HasConstraintName("FK_ArtistGenre_Artist");

                    b.HasOne("Melo.Services.Entities.Genre", "Genre")
                        .WithMany("ArtistGenres")
                        .HasForeignKey("GenreId")
                        .IsRequired()
                        .HasConstraintName("FK_ArtistGenre_Genre");

                    b.Navigation("Artist");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("Melo.Services.Entities.Playlist", b =>
                {
                    b.HasOne("Melo.Services.Entities.User", "User")
                        .WithMany("Playlists")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Playlist_User");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Melo.Services.Entities.SongAlbum", b =>
                {
                    b.HasOne("Melo.Services.Entities.Album", "Album")
                        .WithMany("SongAlbums")
                        .HasForeignKey("AlbumId")
                        .IsRequired()
                        .HasConstraintName("FK_SongAlbum_Album");

                    b.HasOne("Melo.Services.Entities.Song", "Song")
                        .WithMany("SongAlbums")
                        .HasForeignKey("SongId")
                        .IsRequired()
                        .HasConstraintName("FK_SongAlbum_Song");

                    b.Navigation("Album");

                    b.Navigation("Song");
                });

            modelBuilder.Entity("Melo.Services.Entities.SongArtist", b =>
                {
                    b.HasOne("Melo.Services.Entities.Artist", "Artist")
                        .WithMany("SongArtists")
                        .HasForeignKey("ArtistId")
                        .IsRequired()
                        .HasConstraintName("FK_SongArtist_Artist");

                    b.HasOne("Melo.Services.Entities.Song", "Song")
                        .WithMany("SongArtists")
                        .HasForeignKey("SongId")
                        .IsRequired()
                        .HasConstraintName("FK_SongArtist_Song");

                    b.Navigation("Artist");

                    b.Navigation("Song");
                });

            modelBuilder.Entity("Melo.Services.Entities.SongGenre", b =>
                {
                    b.HasOne("Melo.Services.Entities.Genre", "Genre")
                        .WithMany("SongGenres")
                        .HasForeignKey("GenreId")
                        .IsRequired()
                        .HasConstraintName("FK_SongGenre_Genre");

                    b.HasOne("Melo.Services.Entities.Song", "Song")
                        .WithMany("SongGenres")
                        .HasForeignKey("SongId")
                        .IsRequired()
                        .HasConstraintName("FK_SongGenre_Song");

                    b.Navigation("Genre");

                    b.Navigation("Song");
                });

            modelBuilder.Entity("Melo.Services.Entities.SongPlaylist", b =>
                {
                    b.HasOne("Melo.Services.Entities.Playlist", "Playlist")
                        .WithMany("SongPlaylists")
                        .HasForeignKey("PlaylistId")
                        .IsRequired()
                        .HasConstraintName("FK_SongPlaylist_Playlist");

                    b.HasOne("Melo.Services.Entities.Song", "Song")
                        .WithMany("SongPlaylists")
                        .HasForeignKey("SongId")
                        .IsRequired()
                        .HasConstraintName("FK_SongPlaylist_Song");

                    b.Navigation("Playlist");

                    b.Navigation("Song");
                });

            modelBuilder.Entity("Melo.Services.Entities.UserAlbumLike", b =>
                {
                    b.HasOne("Melo.Services.Entities.Album", "Album")
                        .WithMany("UserAlbumLikes")
                        .HasForeignKey("AlbumId")
                        .IsRequired()
                        .HasConstraintName("FK_UserAlbumLike_Album");

                    b.HasOne("Melo.Services.Entities.User", "User")
                        .WithMany("UserAlbumLikes")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_UserAlbumLike_User");

                    b.Navigation("Album");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Melo.Services.Entities.UserAlbumView", b =>
                {
                    b.HasOne("Melo.Services.Entities.Album", "Album")
                        .WithMany("UserAlbumViews")
                        .HasForeignKey("AlbumId")
                        .IsRequired()
                        .HasConstraintName("FK_UserAlbumActivity_Album");

                    b.HasOne("Melo.Services.Entities.User", "User")
                        .WithMany("UserAlbumViews")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_UserAlbumActivity_User");

                    b.Navigation("Album");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Melo.Services.Entities.UserArtistLike", b =>
                {
                    b.HasOne("Melo.Services.Entities.Artist", "Artist")
                        .WithMany("UserArtistLikes")
                        .HasForeignKey("ArtistId")
                        .IsRequired()
                        .HasConstraintName("FK_UserArtistLike_Artist");

                    b.HasOne("Melo.Services.Entities.User", "User")
                        .WithMany("UserArtistLikes")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_UserArtistLike_User");

                    b.Navigation("Artist");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Melo.Services.Entities.UserArtistView", b =>
                {
                    b.HasOne("Melo.Services.Entities.Artist", "Artist")
                        .WithMany("UserArtistViews")
                        .HasForeignKey("ArtistId")
                        .IsRequired()
                        .HasConstraintName("FK_UserArtistActivity_Album");

                    b.HasOne("Melo.Services.Entities.User", "User")
                        .WithMany("UserArtistViews")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_UserArtistActivity_User");

                    b.Navigation("Artist");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Melo.Services.Entities.UserGenreView", b =>
                {
                    b.HasOne("Melo.Services.Entities.Genre", "Genre")
                        .WithMany("UserGenreViews")
                        .HasForeignKey("GenreId")
                        .IsRequired()
                        .HasConstraintName("FK_UserGenreActivity_Genre");

                    b.HasOne("Melo.Services.Entities.User", "User")
                        .WithMany("UserGenreViews")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_UserGenreActivity_User");

                    b.Navigation("Genre");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Melo.Services.Entities.UserRole", b =>
                {
                    b.HasOne("Melo.Services.Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK_UserRole_Role");

                    b.HasOne("Melo.Services.Entities.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_UserRole_User");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Melo.Services.Entities.UserSongLike", b =>
                {
                    b.HasOne("Melo.Services.Entities.Song", "Song")
                        .WithMany("UserSongLikes")
                        .HasForeignKey("SongId")
                        .IsRequired()
                        .HasConstraintName("FK_UserSongLike_Song");

                    b.HasOne("Melo.Services.Entities.User", "User")
                        .WithMany("UserSongLikes")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_UserSongLike_User");

                    b.Navigation("Song");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Melo.Services.Entities.UserSongView", b =>
                {
                    b.HasOne("Melo.Services.Entities.Song", "Song")
                        .WithMany("UserSongViews")
                        .HasForeignKey("SongId")
                        .IsRequired()
                        .HasConstraintName("FK_UserSongActivity_Song");

                    b.HasOne("Melo.Services.Entities.User", "User")
                        .WithMany("UserSongViews")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_UserSongActivity_User");

                    b.Navigation("Song");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Melo.Services.Entities.Album", b =>
                {
                    b.Navigation("AlbumArtists");

                    b.Navigation("AlbumGenres");

                    b.Navigation("SongAlbums");

                    b.Navigation("UserAlbumLikes");

                    b.Navigation("UserAlbumViews");
                });

            modelBuilder.Entity("Melo.Services.Entities.Artist", b =>
                {
                    b.Navigation("AlbumArtists");

                    b.Navigation("ArtistGenres");

                    b.Navigation("SongArtists");

                    b.Navigation("UserArtistLikes");

                    b.Navigation("UserArtistViews");
                });

            modelBuilder.Entity("Melo.Services.Entities.Genre", b =>
                {
                    b.Navigation("AlbumGenres");

                    b.Navigation("ArtistGenres");

                    b.Navigation("SongGenres");

                    b.Navigation("UserGenreViews");
                });

            modelBuilder.Entity("Melo.Services.Entities.Playlist", b =>
                {
                    b.Navigation("SongPlaylists");
                });

            modelBuilder.Entity("Melo.Services.Entities.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Melo.Services.Entities.Song", b =>
                {
                    b.Navigation("SongAlbums");

                    b.Navigation("SongArtists");

                    b.Navigation("SongGenres");

                    b.Navigation("SongPlaylists");

                    b.Navigation("UserSongLikes");

                    b.Navigation("UserSongViews");
                });

            modelBuilder.Entity("Melo.Services.Entities.User", b =>
                {
                    b.Navigation("Playlists");

                    b.Navigation("UserAlbumLikes");

                    b.Navigation("UserAlbumViews");

                    b.Navigation("UserArtistLikes");

                    b.Navigation("UserArtistViews");

                    b.Navigation("UserGenreViews");

                    b.Navigation("UserRoles");

                    b.Navigation("UserSongLikes");

                    b.Navigation("UserSongViews");
                });
#pragma warning restore 612, 618
        }
    }
}
